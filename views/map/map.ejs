<!DOCTYPE html>
<html>
  <head>
    <meta name="viewport" content="initial-scale=1.0, user-scalable=no">
    <meta charset="utf-8">
    <title>Place search pagination</title>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 80%;
      }
      /* Optional: Makes the sample page fill the window. */
      body,
      html {
        height: 100%;
        margin: 0;
        padding: 0;
      }
      #right-panel {
        font-family: 'Roboto','sans-serif';
        line-height: 30px;
        padding-left: 10px;
      }

      #right-panel input,
      #right-panel select {
        font-size: 15px;
      }

      #right-panel select {
        width: 100%;
      }

      #right-panel i {
        font-size: 12px;
      }
      #right-panel {
        font-family: Arial, Helvetica, sans-serif;
        position: absolute;
        right: 5px;
        top: 158px;
        /*margin-top: -195px;*/
        height: 335px;
        width: 400px;
        padding: 5px;
        z-index: 5;
        border: 1px solid #999;
        background: #fff;
      }
      #directions-panel {
        font-family: Arial, Helvetica, sans-serif;
        position: absolute;
        right: 5px;
        top: 400px;
        /*margin-top: -195px;*/
        height: 300px;
        width: 400px;
        padding: 5px;
        z-index: 6;
        border: 1px solid #999;
        background: #fff;
        overflow: auto;
      }

      h2 {
        font-size: 22px;
        margin: 0 0 5px;
      }
      ul {
        list-style-type: none;
        padding: 0;
        margin: 0;
        height: 271px;
        overflow-y: scroll;
      }
      li {
        background-color: #f1f1f1;
        padding: 10px;
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
      }
      li:nth-child(odd) {
        background-color: #fcfcfc;
      }
      #more {
        width: 100%;
        margin: 27px 0 0 0;
      }

    </style>
    <script>
      // This example requires the Places library. Include the libraries=places parameter when you first load the API. For example: <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

      var map;
      var directionsService;
      var directionsDisplay;

      function initMap() {
        var placeToSearch = {
          lat: parseFloat("<%= mapLat %>"),
          lng: parseFloat("<%= mapLong %>")
        }

        map = new google.maps.Map(document.getElementById('map'), {
          center: placeToSearch,
          zoom: 16
        })

        directionsService = new google.maps.DirectionsService
        directionsDisplay = new google.maps.DirectionsRenderer
        directionsDisplay.setPanel(document.getElementById('directions-panel'))
        document.getElementById('directions-panel').style.display = 'none'

        var marker = new google.maps.Marker({position: placeToSearch, map: map})

        var service = new google.maps.places.PlacesService(map)

        service.nearbySearch({
          location: placeToSearch,
          radius: 5000,
          type: ['pharmacy']
        }, processResults)
      }

      function calculateAndDisplayRoute(directionsService, directionsDisplay, destination) {
        document.getElementById('directions-panel').style.display = 'block'
        directionsDisplay.setMap(map)
        directionsService.route({
          origin: "<%= mapLat %>,<%= mapLong %>",
          destination: destination.lat().toString() + ',' + destination.lng().toString(),
          travelMode: 'DRIVING'
        }, function(response, status) {
          if (status === 'OK') {
            directionsDisplay.setDirections(response)
          } else {
            window.alert('Directions request failed due to ' + status)
          }
        })
      }

      function processResults(results, status, pagination) {
        if (status !== google.maps.places.PlacesServiceStatus.OK) {
          return;
        } else {
          createMarkers(results, directionsService, directionsDisplay);

          if (pagination.hasNextPage) {
            var moreButton = document.getElementById('more');

            moreButton.disabled = false;

            moreButton.addEventListener('click', function() {
              moreButton.disabled = true;
              pagination.nextPage();
            });
          }
        }
      }

      function createMarkers(places) {
        var bounds = new google.maps.LatLngBounds();
        var placesList = document.getElementById('places');
        var infowindow = new google.maps.InfoWindow()
        for (var i = 0; i < places.length; i++) {
          var place = places[i]
          var image = {
            url: place.icon,
            size: new google.maps.Size(71, 71),
            origin: new google.maps.Point(0, 0),
            anchor: new google.maps.Point(17, 34),
            scaledSize: new google.maps.Size(25, 25)
          }
          var marker = new google.maps.Marker({map: map, icon: image, title: place.name, position: place.geometry.location})
          var content = '<div><strong>' + place.name + '</strong></div>'

          google.maps.event.addListener(marker, 'click', (function(marker, content, infowindow) {

            return function() {
              directionsDisplay.setMap(null)
              calculateAndDisplayRoute(directionsService, directionsDisplay, this.getPosition())
              infowindow.setContent(content);
              infowindow.open(map, marker)
            }
          })(marker, content, infowindow))

          placesList.innerHTML += '<li>' + place.name + '</li>'

          bounds.extend(place.geometry.location)
        }
        map.fitBounds(bounds)

      }
    </script>
  </head>
  <body>
    <div id="map"></div>
    <div id="right-panel">
      <h2>Results</h2>
      <ul id="places"></ul>
      <button id="more">More results</button>
    </div>
    <div id="directions-panel">
      <h2>Directions</h2>
    </div>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDliZ9ymHudLYcknRrq1oHR8cL-8mun2yE&libraries=places&callback=initMap" async defer></script>
  </body>
</html>
